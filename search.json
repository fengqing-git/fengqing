[{"title":"zabbix6.0安装","path":"/2022/12/14/zabbix-6.0-install/","content":"本文示范了zabbix在centos8s中的all-in-one的安装和配置基础系统配置设置计算机名字~~~bashhostnamectl set-hostname zabbix #设置计算机名字~~~关闭selinuxchild:codeblock color:yellow~~~bashsed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config # 关闭selinux~~~~~~bashchild:codeblock color:yellowsed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config # 关闭selinux~~~关闭防火墙~~~bashsystemctl stop firewalld # 立刻关闭防火墙systemctl disable --now firewalld # 关闭开机自启动~~~重启系统~~~bashreboot # 重启~~~配置zabbix的rpm源~~~bashrpm -Uvh https://mirrors.aliyun.com/zabbix/zabbix/6.0/rhel/8/x86_64/zabbix-release-6.0-1.el8.noarch.rpm #安装aliyun的zabbix源~~~查看软件列表~~~bashyum list  grep zabbix* #列出所有zabbix的软件包，并查找zabbix，确认版本无误后再继续安装~~~安装数据库数据库版本选择~~~bash#数据库版本选择看实际情况，如果公司里有数据库了，则新建一个库和用户，授权访问即可#如果没有就按下面的安装 一个新的就可以#我这里选择mysql8，也可以选择mariadb，两者有区别，建议官网自查~~~安装前~~~bash# 安装前要确认没有系统自带的mariadb，如果有要删掉~~~~~~bashrpm -qa  grep -i mariadb #搜索mariadb~~~~~~bashrpm -e --nodeps mariadb-libs-5.5.52-1.el7.x86_64 rpm -e --nodeps mariadb-connector-c-config-3.1.11-2.el8_3.noarch#删除搜索出来的包rpm -qa  grep -i mariadb  # 再次搜索确认~~~配置mysql8的yum源~~~bashyum module disable mysql -y # 禁用自带的mysqlrpm -Uvh https://dev.mysql.com/get/mysql80-community-release-el8-1.noarch.rpm # 配置新的源yum list  grep mysql* #查询mysql版本确认是需要的后再安装~~~安装mysql```bashyum install mysql-community-server --nogpgcheck # 开始安装，由于用的是国外的默认源，速度快慢取决于网络，也可以挂代理```~~~bashvim /etc/yum.conf #编辑yum配置，添加代理proxy=http://proxyHost:proxyPort #选择自己的代理服务器~~~启动mysql~~~bashservice mysqld start #启动~~~```bashsystemctl status mysqld # 查看状态```查看mysql随机密码~~~bashgrep 'temporary password' /var/log/mysqld.log # 查看初始密码~~~使用初始随机密码登陆~~~bashmysql -uroot -p #输入初始随机密码后可登录数据库~~~初始化数据库设置~~~mysqlALTER USER 'root'@'localhost' IDENTIFIED BY 'P@ssw0rd@123'; #修改密码为强密码#登陆进去后一定要先修改密码否则会报错:You must reset your password using ALTER USER statement before executing this statementSHOW VARIABLES LIKE 'validate_password%'; #查看当前密码策略set global validate_password.length=1; #修改密码长度set global validate_password.policy=0; #修改密码等级set global log_bin_trust_function_creators = 1; #创建Trigger#修改密码策略后才能更改简单的密码，这里按实际要求来，我问了方便修改了策略ALTER USER 'root'@'localhost' IDENTIFIED BY 'P@ssw0rd@123';#修改自己想要的密码并授权licalhost登陆flush privileges; #刷新~~~创建zabbix数据库~~~mysqlcreate database zabbix character set utf8 collate utf8_bin; #创建数据库create user zabbix@'%' identified by 'zabbix@2022'; # 创建zabbix用户并授权所有可以访问mysql，密码为:zabbix@2022grant all privileges on zabbix.* to zabbix@'%'; # 设置zabbix用户的数据库权限ALTER USER zabbix@'%' IDENTIFIED WITH mysql_native_password BY 'zabbix@2022'; #设置允许密码登录flush privileges; #刷新~~~测试登陆~~~bashmysql -uzabbix -p #输入密码即可用zabbix用户登录数据库~~~~~~mysqlshow databases; #查询数据库，可以看到zabbix表即可~~~开始安装zabbix安装zabbix组件~~~bashdnf install zabbix-server-mysql zabbix-web-mysql zabbix-apache-conf zabbix-sql-scripts zabbix-selinux-policy zabbix-agent # 安装组件~~~配置zabbix~~~bashzcat /usr/share/doc/zabbix-sql-scripts/mysql/server.sql.gz  mysql -uzabbix -p # 导入初始架构和数据，系统将提示您输入新创建的密码~~~~~~bashvim /etc/zabbix/zabbix_server.conf #导入完成后编辑配置文件，把密码写入DBPassword=zabbix@2022~~~启动zabbix~~~bashsystemctl restart zabbix-server zabbix-agent httpd php-fpm # 启动组件systemctl enable zabbix-server zabbix-agent httpd php-fpm # 设置开机自启动~~~登陆前端```bash#连接到新安装的Zabbix前端： http://server_ip_or_name/zabbix```配置前端选择next选择next此处输入zabbix数据库密码:zabbix@2022后点击next输入想要的名字后点next点击next点完成输入初始账号:Admin密码：zabbix结束","tags":["zabbix","centos"],"categories":["zabbix"]},{"title":"Hello World","path":"/2022/12/13/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)"}]